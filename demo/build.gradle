plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
	maven { url "https://plugins.gradle.org/m2/" }
}

dependencyManagement {
	dependencies {
		dependency "org.elasticsearch.client:elasticsearch-rest-high-level-client:${elasticsearchVersion}"
		dependency "org.elasticsearch.client:elasticsearch-rest-client:${elasticsearchVersion}"
		dependency "org.elasticsearch:elasticsearch:${elasticsearchVersion}"
	}
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	compileOnly("org.testcontainers:testcontainers:${testcontainerVersion}")
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
	testImplementation("org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}")
	testImplementation("org.assertj:assertj-core:${assertjVersion}")
	testImplementation("org.testcontainers:testcontainers:1.17.2")
	implementation("org.elasticsearch.client:elasticsearch-rest-high-level-client:${elasticsearchVersion}")
}
tasks.named('test') {
	useJUnitPlatform()
}