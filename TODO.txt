TODO) 

Spb Admin 

기능: 
  ★. 새 aws 계정으로 EC2 만들고 mysql 작업 환경 구성하기. 구성 다 하고 테스트까지 하기
    - mariadb 설치 및 테이블 이관. - 완료. spb, spb-admin 두 프로젝트 모두 동작 확인 완료
    - mongodb 설치 - 필요해지면 바로 설치하기 
    - Github GUI 프로그램 설치하여 커밋 조심히 하기 - 완료
  1. spbadmin 계정 생성하기 - sequelize User 책이랑 똑같이 만들고, 관리자계정을 DB에 강제로 추가.  - 완료
  2. api 키 받아서 인증해서 api 호출 구현.  - 완료
  3. 로그인 - redis 연동하여 로그인 구현... 
      회원 추가는 완료, 서버 지연 처리와 오류 표시하기 완료, 
      대용량 데이터 효율적으로 처리하기 포스팅 보고 만들어보기 완료, 
      API에 limit, page같은 파람 넘어갔으니까 확인해서 파람대로 나오게 소스 변경해기 - 완료
      axios 호출 작업 모듈화 하기 해보기. - 완료 
      회원 가입 기능 구현하기 글 보고 관리자 추가 소스 수정하기 - 완료
      Toast 메시지 왜 안뜨나 보기 - 완료
      관리자 추가 이후 Toast 띄우는 것도 만들어보기 - 완료
      router 적용 완료. 주소에 undefined 뜨는 문제 해결하기. - 완료. 
      코드 스플리팅 기법 적용 - AsyncMainPage 적용하기 - 완료 
      이후에 첫화면 모달로 만들기 - 완료 - 모달 말고 로그인 페이지 따로 만드는중.
      redis 연동은 api 관리화면에서만 하는거로 하자. redux 사용한 로그인으로 대체.
      관리자 로그인 시 Toast 적용 완료, 화면 전환 및 redux 사용하여 데이터 다루기 및 로그인 페이지 제외한 페이지들 로그인하지 않을 시 로그인 페이지로 이동하는 것 개발하기 - 로그인 정보는 
      sessionStorage 활용하여 개발 완료. 
      로그아웃 시 Toast 메시지 띄우기 - 완료. Toast 메시지 읽을 시간 3000ms 적용함. 
  4. 메인 광고 배너관리 만들기 - form으로 파일정보 넘기는것 까지 대충 완료. S3관련 포스팅 보고 만들어보자. - S3, MariaDB, Node 연동하여 관리 시스템 구축 방법 생각 및 개발하기 - 완료. 
      메인 광고 배너 조회 - 완료
      조회하는걸 모달로 두지 말고 로그 조회처럼 '/' 화면에 버튼으로 조작하면 볼 수 있게 컴포넌트 돌려쓰는 식으로 개발하기. - 완료
      sequelize where and, like 조회 구현하기 - 완료 
      수정 및 삭제 클릭시 모달뜨게, 배너 광고 추가 버튼으로는 추가 할 수 있게 그대로 두기. - 완료 
      spb-admin에서 배너 광고 조회, 수정, 삭제 가능하도록 개발하기. - 완료 
      테이블 형식으로 조회 및 수정 가능하게 하면 될듯. - 완료 
      spb-admin 배너리스트 페이징 처리 - 완료, 
      spb 로그인시 몽고디비에 로그인 로직 추가 - 완료
  TODO) 
      spb-admin - 사용자 로그인 로그 조회 기능 개발하기 - loginLog - apiserverside router 만들기, mongoose 사용하여 mongodb <-> node 연동하기

      , 서버 에러 로그
        DB: MONGO, NODE: MONGOOSE
      spb-admin - 서버 에러 로그
      
      mongodb 연동부분 포스팅하기 - public 공개
      
      
       

  5. 로그 열람 기능 - 사용자 로그인, 거래 로그(상품 CRUD관련, 판매, 구매 로그), 서버 에러 로그
    - 판매로그 - spb-checkout
  6. Overview - 일일 방문자, 총 방문자 숫자 카운팅
  


1. 자동완성 indebouce 함수 사용해서 다시 만들어보기 

2. react node redis 활용하여 관리자 페이지 만들기
3. elasticsearch 책 하나 더 사서 docker, api 공부해보기 이후 자동완성 포스팅하기 
4. 코딩테스트 책사서 공부하기, notion 포트폴리오 만들기 


★TODO) 
0. 합격자 스펙조사 
1. 포트폴리오 배민기준으로 만들기. - 포트폴리오는 notion
2. 공부한것들 기록할 블로그 정하기. (tstory 등등)  -  TIL (Today I learned) - tistory



[오전]
08:00 기상, 아침식사, 샤워
09:00 오전공부 시작
12:00 휴식 및 점심식사 

[오후]
1:00 오후공부 시작
6:00 오후공부 끝

02:00 취침