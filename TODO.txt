TODO) 

Spb Admin 

기능: 
  ★. 새 aws 계정으로 EC2 만들고 mysql 작업 환경 구성하기. 구성 다 하고 테스트까지 하기
    - mariadb 설치 및 테이블 이관. - 완료. spb, spb-admin 두 프로젝트 모두 동작 확인 완료
    - mongodb 설치 - 필요해지면 바로 설치하기 
    - Github GUI 프로그램 설치하여 커밋 조심히 하기 - 완료
  1. spbadmin 계정 생성하기 - sequelize User 책이랑 똑같이 만들고, 관리자계정을 DB에 강제로 추가.  - 완료
  2. api 키 받아서 인증해서 api 호출 구현.  - 완료
  3. 로그인 - redis 연동하여 로그인 구현... 
      회원 추가는 완료, 서버 지연 처리와 오류 표시하기 완료, 
      대용량 데이터 효율적으로 처리하기 포스팅 보고 만들어보기 완료, 
      API에 limit, page같은 파람 넘어갔으니까 확인해서 파람대로 나오게 소스 변경해기 - 완료
      axios 호출 작업 모듈화 하기 해보기. - 완료 
      회원 가입 기능 구현하기 글 보고 관리자 추가 소스 수정하기 - 완료
      Toast 메시지 왜 안뜨나 보기 - 완료
      관리자 추가 이후 Toast 띄우는 것도 만들어보기 - 완료
      router 적용 완료. 주소에 undefined 뜨는 문제 해결하기. - 완료. 
      코드 스플리팅 기법 적용 - AsyncMainPage 적용하기 - 완료 
      이후에 첫화면 모달로 만들기 - 완료 - 모달 말고 로그인 페이지 따로 만드는중.
      redis 연동은 api 관리화면에서만 하는거로 하자. redux 사용한 로그인으로 대체.
      관리자 로그인 시 Toast 적용 완료, 화면 전환 및 redux 사용하여 데이터 다루기 및 로그인 페이지 제외한 페이지들 로그인하지 않을 시 로그인 페이지로 이동하는 것 개발하기 - 로그인 정보는 
      sessionStorage 활용하여 개발 완료. 
      로그아웃 시 Toast 메시지 띄우기 - 완료. Toast 메시지 읽을 시간 3000ms 적용함. 
  4. 메인 광고 배너관리 만들기 - form으로 파일정보 넘기는것 까지 대충 완료. S3관련 포스팅 보고 만들어보자. - S3, MariaDB, Node 연동하여 관리 시스템 구축 방법 생각 및 개발하기 - 완료. 
      메인 광고 배너 조회 - 완료
      조회하는걸 모달로 두지 말고 로그 조회처럼 '/' 화면에 버튼으로 조작하면 볼 수 있게 컴포넌트 돌려쓰는 식으로 개발하기. - 완료
      sequelize where and, like 조회 구현하기 - 완료 
      수정 및 삭제 클릭시 모달뜨게, 배너 광고 추가 버튼으로는 추가 할 수 있게 그대로 두기. - 완료 
      spb-admin에서 배너 광고 조회, 수정, 삭제 가능하도록 개발하기. - 완료 
      테이블 형식으로 조회 및 수정 가능하게 하면 될듯. - 완료 
      spb-admin 배너리스트 페이징 처리 - 완료, 
      spb 로그인시 몽고디비에 로그인 로직 추가 - 완료
      spb-admin - 사용자 로그인 로그 조회 기능 개발하기 - loginLog - apiserverside router 만들기 - 완료
      , mongoose 사용하여 mongodb <-> node 연동하기 - 완료
      , 
      서버 에러 로그 - 404 및 엘라스틱 일부 에러 로그 몽고디비에 수집하도록 로직 수정 - 완료
      spb-admin 서버 에러로그 조회 만들기 - 완료
        DB: MONGO, NODE: MONGOOSE
      spb-admin - 서버 에러 로그
      5. 로그 열람 기능 - 사용자 로그인, - 완료 
     거래 로그(상품 CRUD관련, 판매 로그), - 완료
     서버 에러 로그 - 완료
    
    - 판매로그 - spb-checkout - mariadb
    - 사용자 로그인 - spb/login-log - mongodb
    - 서버 에러 로그 - spb/spb-error - mongodb
    mongodb 연동부분 포스팅하기 - public 공개 - 완료
    방문자 로그 몽고 디비에 남기기 - spb - 세션 생성 시마다 하면 될듯 - 완료
    6. Overview - 일일 방문자, 주간 방문자, 월간 방문자, 총 방문자 숫자 카운팅 
   - 오늘 방문자 수,이번달 방문자수, 총 방문자 수 카운팅하여 집계 뽑기 - spbadmin - 완료
   3. spb - redis 연동하여 session 관리 - 완료

   2. redis node 연동하여 카운팅하기...... 일간 주간 월간 전체 조회하기  - 완료
    - _id를 sessionId로 사용하여 몽고디비에 기존 로직 수정 없이 repository.save 하여 로그아웃에 카운트 수 영향받지 않도록 개발. 
    spring security 부분 로그아웃하여도 session invalidate 하지 않고 memberId, memberName 값만 지우도록 하여 로그인 로그아웃에 따른 카운트 수 영향 없도록 개발
    loginlog, errorlog sort timestamp desc
    errorLog - uri 필드 추가함
    3. elasticsearch docker해보기 - elasticsearch docker로 띄우기 완료. elasticsearch 설정 및 데이터 이관하기 - 완료
      - WLS2기반으로 windows에서 docker 실행. 
      docker 에서 image 받아서 elasticsearch7.14.1 설치
      docker 에서 image 받아서 kibana7.14.1 설치
      docker exec -it 사용하여 elasticsearch /bin/bash 접속
      plugin 모듈 실행하여 nori_tokenizer 설치
      - 자동완성, 인기검색어 테스트 완료
    4. 스프링부트 시작하기 책데로 진도 끝내보기
    - jenkins 설치 완료. 
    -openjdk 관련 이슈 - binary 압축 푼 jdk로는 jenkins의 font를 가져오는 부분이 jdk에 없는듯하여 apt-get으로 jdk를 추가 설치. 
    기존 jdk는 그대로 tomcat이 사용.   - 완료
    - jenkins 초기 세팅 실행 시 cpu 사용량 증가로 인한 서버 다운 - https://tape22.tistory.com/22 참조하여 SWAP 메모리 기능 사용하여 해결 - 완료
    - 9.5.3 플러그인 설치 - 비트버킷과 연동하기 위한 플러그인 - 완료
    - 빌드 도구인 그레이들, 깃 설치하기. - 완료
    - 젠킨스 SSH 등록하기 - 일단 pass, 추후 127.0.0.1로 접속이 되지 않는다면 public ipv4 ip입력하고, pem파일 등록하여 시도하자
    - 톰켓에 JAVA_HOME 설정하기 - 완료. 
    - 스웨거 세팅 - 완료 , 공부 및 포스팅 - 완료
    - spb 비 로그인 시 장바구니 쿠키명존재하고, 쿠키값이 ""일 때 500 에러 발생 - 분기처리하여 해결 - 완료 
    10.2 스프링 프로파일 적용하기 공부 및 포스팅 - 완료
    10.3 스프링 Cloud Config 사용하기 공부 및 포스팅 - 완료
    10.4 수동으로 톰켓에 배포하기 - cloud-config 404 해결하기 
      - 해결. Tomcat 9.0으로 업데이트하여 web4.0 warning 해결, 
      - CloudConfigApplication 에 SpringBootServletInitializer를 extends 하여 web.xml이 없어서 tomcat호출시 404 에러 해결
      - gradle에서 java version 1.8로 downgrade 하여 tomcat의 java version과 맞춤
    포스팅및 spb 구동을 위한 포트포워딩 (이중 공유기 아빠 없을때 거실 공유기 뒷면 확인하여 비밀번호 알아내기) -완료
      - 해결 - U+ 고객센터에 전화연결하여 gateway 패스워드 제공받아서 성공. 거실공유기는 관련없었던거고 상위 공유기 (신발장같은곳에 있을거라고 한다) 관리페이지 접속 성공
    10.5 젠킨스를 사용해서 자동 빌드 & 배포 환경 구성하기 - github, bitbucket 전전하다가 결국 bitbucket으로 결정. github에서는 .gitignore에 /spb-deploy 추가하여 해당 프로젝트는 올라가지 않게 했으며, spb프로젝트를 /spb-deploy로 복사하여 spb-deploy를 bitbucket으로 올림. 책 따라서 진행하면 될듯.
    spb 프로젝트 CI/CD 배포 자동화 완료 - 이러면 스프링부트 시작하기 책 끝!!!!!! 
  TODO)
     jenkins 포트개방 포스팅하기
    5. spb 프로젝트 완성하기 
      - 상품등록 path 맞추기 - 완료
      - 홈화면, 거래완료화면
    6. 검색서버 분리하기 - docker 사용해보기
    7. 코딩테스트 책사서 공부하기, notion 포트폴리오 만들기 



★TODO) 
0. 합격자 스펙조사 
1. 포트폴리오 배민기준으로 만들기. - 포트폴리오는 notion
2. 공부한것들 기록할 블로그 정하기. (tstory 등등)  -  TIL (Today I learned) - tistory



[오전]
08:00 기상, 아침식사, 샤워
09:00 오전공부 시작
12:00 휴식 및 점심식사 

[오후]
1:00 오후공부 시작
6:00 오후공부 끝

02:00 취침